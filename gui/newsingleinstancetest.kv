#: import output_testing_gui output_testing_gui

<HorizontalBoxLayout@BoxLayout>:
    orientation: 'horizontal'


<VerticalBoxLayout@BoxLayout>:
    orientation: 'vertical'

<SquareImage@Image>
    size_hint: None, None
    width: 40
    height: 40

<PlayerRotation@VerticalBoxLayout>
    selected_rotation: []
    starting_text: '(no spells selected, \nrotation will be automatic)'
    on_selected_rotation:
        if self.selected_rotation == []: rotation_label.text = self.starting_text
        else: rotation_label.text = str(self.selected_rotation).strip('[]').replace("'", '')

    Button:
        text: 'Clear rotation'
        size_hint_x: 0.5
        on_release: root.selected_rotation = []
    HorizontalBoxLayout:
        Button:
            text: 'AA'
            on_release: root.selected_rotation.append(self.text.lower())
        Button:
            text: 'Q'
            on_release: root.selected_rotation.append(self.text.lower())
        Button:
            text: 'W'
            on_release: root.selected_rotation.append(self.text.lower())
        Button:
            text: 'E'
            on_release: root.selected_rotation.append(self.text.lower())
        Button:
            text: 'R'
            on_release: root.selected_rotation.append(self.text.lower())
    Label:
        id: rotation_label
        text: root.starting_text

<PlayerExternalVariables@HorizontalBoxLayout>

<EnemiesNames@HorizontalBoxLayout>


<MainWidget>:
    do_default_tab: False
    id: main_widget

    selected_champions_dct: {'player': 'jax', 'enemy_1': 'melee_creep'}
    ability_lvls_dct: {k: 0 for k in output_testing_gui.SPELL_SHORTCUTS}
    champion_lvls_dct: {k: 1 for k in output_testing_gui.PLAYER_AND_ENEMIES_LST}

    max_combat_time: 10
    chosen_items_dct: {k: [] for k in output_testing_gui.PLAYER_AND_ENEMIES_LST}
    selected_summoner_spells: []
    player_champion: self.selected_champions_dct['player']
    on_player_champion: self.selected_champions_dct['player'] = self.player_champion
    player_items: {}
    rotation_lst: rotation_widget.selected_rotation
    runes: {}
    masteries: {}


    on_server_status: server_status_label.text = 'Server: {}'.format(main_widget.server_status)
    on_server_status: server_status_label.color = (0, 1, 0, 1) if main_widget.server_status == 'online' else (1,0,0,1)

    TabbedPanelItem:
        text: 'General'

        VerticalBoxLayout:
            HorizontalBoxLayout:
                size_hint_y: 0.1
                Label:
                    id: server_status_label
                    text: 'Checking server status...'
                    color: (1,1,0,1)
                Label:
                    id: server_message_label
                    text: '(server message label placeholder)'

            HorizontalBoxLayout:
                VerticalBoxLayout:
                    size_hint_x: .25

                    HorizontalBoxLayout:

                        VerticalBoxLayout:

                            VerticalBoxLayout:
                                spacing: 5

                                ChampionButton:
                                    id: player_champion_button
                                    on_text: main_widget.player_champion = self.text.lower()

                                LvlsDropdownButton:
                                    min_max: 1, 18
                                    id: player_champion_lvl
                                    size_hint_x: None
                                    width: player_champion_button.width
                                    on_lvl: main_widget.champion_lvls_dct['player'] = self.lvl
                                Label:
                                    size_hint_x: None
                                    width: player_champion_button.width
                                    text: player_champion_button.text

                    GridLayout:
                        cols: 3
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_1'] = self.obj_name
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_2'] = self.obj_name
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_3'] = self.obj_name
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_4'] = self.obj_name
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_5'] = self.obj_name
                        ItemButton:
                            on_obj_name: main_widget.player_items['item_6'] = self.obj_name
                    GridLayout:
                        id: skills_widget
                        cols: 4
                        pos_hint_y: 'top'
                        spacing: 2
                        padding: 5
                        SquareImage:
                            id: q_image
                            spell_name: 'q'
                            source: output_testing_gui.spell_icon_path(champion_name=main_widget.player_champion, ability_name=self.spell_name)
                        SquareImage:
                            id: w_image
                            spell_name: 'w'
                            source: output_testing_gui.spell_icon_path(champion_name=main_widget.player_champion, ability_name=self.spell_name)
                        SquareImage:
                            id: e_image
                            spell_name: 'e'
                            source: output_testing_gui.spell_icon_path(champion_name=main_widget.player_champion, ability_name=self.spell_name)
                        SquareImage:
                            id: r_image
                            spell_name: 'r'
                            source: output_testing_gui.spell_icon_path(champion_name=main_widget.player_champion, ability_name=self.spell_name)
                        LvlsDropdownButton:
                            id: q_lvl_button
                            min_max: 0, 5
                            on_lvl: main_widget.ability_lvls_dct['q'] = self.lvl
                        LvlsDropdownButton:
                            id: w_lvl_button
                            min_max: 0, 5
                            on_lvl: main_widget.ability_lvls_dct['w'] = self.lvl
                        LvlsDropdownButton:
                            id: e_lvl_button
                            min_max: 0, 5
                            on_lvl: main_widget.ability_lvls_dct['e'] = self.lvl
                        LvlsDropdownButton:
                            id: r_lvl_button
                            min_max: 0, 3
                            on_lvl: main_widget.ability_lvls_dct['r'] = self.lvl

                    PlayerRotation:
                        id: rotation_widget
                    EnemiesNames:
                        size_hint_y: 0.1
                    Button:
                        text: "DON'T PUSH \nTHIS BUTTON"
                        size_hint_x: 0.7
                        background_color: (1,0,0,1)
                        on_release:root.request_results(params_dct=({'input_as_str': main_widget.preset_dct_as_str()}))
                    VerticalBoxLayout:
                        padding: 10
                        Button:
                            size_hint: 0.8, 0.3
                            text: 'Send bug report'
                        TextInput:
                            hint_text: '(extra comments)'

                Image:
                    id: results_image
                    source: ""

    TabbedPanelItem:
        text: 'Masteries'
        HorizontalBoxLayout:
            VerticalBoxLayout:

            VerticalBoxLayout
            VerticalBoxLayout

    TabbedPanelItem:
        text: 'Runes'

    TabbedPanelItem:
        text: 'Enemies'

        VerticalBoxLayout:
            Label:
                text: 'Only a melee creep is currently available.\nIt has 0 armor and 0 mr, and deals no dmg.\n\nFight well!'
            Label
            Label


<UseTheCanvasForDebugging@Label>:
    canvas.after:
        Color:
            rgba: (1,0,0,.5)
        Rectangle:
            pos: self.pos
            size: self.size